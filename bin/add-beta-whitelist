#!/usr/bin/env zsh

[ "$1" = "" ] && echo "Usage: $0 <Your Name>" && exit 1

DESCRIPTION="$1's IP allowed to access."
POLICY_NAME=allowed-ip-staging

update_rule() {
  echo "updating rule with priority $1 ($DESCRIPTION) with ip ranges $2"
  gcloud compute security-policies rules update $1 \
    --security-policy $POLICY_NAME \
    --src-ip-ranges $2 \
    --description $DESCRIPTION \
    --action=allow
}

create_rule() {
  echo "creating rule with priority $1 ($DESCRIPTION) with ip ranges $2"
  gcloud compute security-policies rules create $1 \
    --security-policy $POLICY_NAME \
    --src-ip-ranges $2 \
    --description $DESCRIPTION \
    --action=allow
}

ip=$(curl https://jsonip.com -s | jq -r .ip)
rules=$(gcloud compute security-policies describe $POLICY_NAME | yq '.rules')
existing_rule=$(echo $rules | yq '.[] | select(.description == "'$DESCRIPTION'")')
id=$(echo $existing_rule | yq .priority)

if [ "$id" = "null" ]; then
  id=$(echo $rules | yq '.[] | select(.priority < 10000) | .priority' | sort -n | tail -n 1 | awk '{print $1 + 1}')
  create_rule $id $ip
else
  ip_ranges=$(echo $existing_rule | yq .match.config.srcIpRanges)
  ip_exists=$(echo $ip_ranges | yq '.[] | select(. == "'$ip'")')
  if [ "$ip_exists" = "" ]; then
    ip_ranges=$(echo $ip_ranges | yq '. += "'${ip}'"')
    ip_ranges_str=$(echo $ip_ranges | yq 'join(",")')
    update_rule $id $(echo $ip_ranges | yq 'join(",")')
  else
    echo "skipping update of rule with priority $id ($DESCRIPTION) with additional ip $ip: already exists"
    exit 0
  fi
fi
