#!/bin/sh
# Set up macOS development environment
# This script installs Homebrew and runs the dotfiles installer
set -eu

# Check if running on macOS
if [ "$(uname)" != "Darwin" ]; then
  echo "Error: This script is designed for macOS only"
  exit 1
fi

# shellcheck disable=all
echo 'export PATH="$HOME/.dotfiles/bin:/opt/homebrew/bin:/usr/local/bin:$PATH"' >> ~/.zshrc

DIRNAME=$(dirname "$0")
export PATH="$DIRNAME:/opt/homebrew/bin:/usr/local/bin:$PATH"

echo "basename: [$(basename "$0")]"
echo "dir     : [$DIRNAME]"
echo "pwd     : [$(pwd)]"

# check if a command exists
using() {
  command -v "$1" > /dev/null 2>&1
}

# install brew if we don't have it
if ! using brew; then
  echo "Installing Homebrew..."
  if ! /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"; then
    echo "Error: Homebrew installation failed"
    exit 1
  fi
  
  # Add Homebrew to PATH for this session
  if [ -f /opt/homebrew/bin/brew ]; then
    eval "$(/opt/homebrew/bin/brew shellenv)"
  elif [ -f /usr/local/bin/brew ]; then
    eval "$(/usr/local/bin/brew shellenv)"
  fi
fi

# create ssh dir
if [ ! -d ~/.ssh ]; then
  mkdir ~/.ssh
  chmod 700 ~/.ssh
fi

# run install/link script for dotfiles
if [ ! -f "$DIRNAME/../install" ]; then
  echo "Error: Install script not found at $DIRNAME/../install"
  echo "Are you running this from the correct location?"
  exit 1
fi

echo "Running dotfiles installer..."
if ! "$DIRNAME/../install"; then
  echo "Error: Dotfiles installation failed"
  exit 1
fi

# homebrew - check if Brewfile exists before running bundle
if [ -f "$HOME/Brewfile" ] || [ -f "$DIRNAME/../Brewfile" ]; then
  echo "Installing Homebrew packages..."
  if ! brew bundle; then
    echo "Warning: Some Homebrew packages failed to install"
  fi
else
  echo "Warning: No Brewfile found, skipping brew bundle"
fi

# change shell to fish
# Ensure fish is installed first
if using fish; then
  fish_path="$(which fish)"
  # Ensure fish is in shells and set as default shell if not already
  if ! grep -q "$fish_path" /etc/shells; then
    echo "Adding fish to /etc/shells..."
    if ! echo "$fish_path" | sudo tee -a /etc/shells > /dev/null; then
      echo "Warning: Could not add fish to /etc/shells"
    fi
  fi

  if ! echo "$SHELL" | grep -q "fish"; then
    echo "Changing default shell to fish..."
    if ! chsh -s "$fish_path"; then
      echo "Warning: Could not change default shell to fish"
      echo "You may need to run: chsh -s $fish_path"
    fi
  fi
else
  echo "Warning: fish not found, skipping shell change"
fi

# mise - install tools if mise is available
if using mise; then
  echo "Installing mise tools..."
  if ! mise i; then
    echo "Warning: Some mise tools failed to install"
  fi
else
  echo "Warning: mise not found, skipping tool installation"
fi

# adding Geist and Hack
if using install-font-macos; then
  echo "Installing fonts..."
  if ! install-font-macos \
    "https://github.com/vercel/geist-font/releases/download/1.5.0/Geist-1.5.0.zip" \
    "https://github.com/vercel/geist-font/releases/download/1.5.0/GeistMono-1.5.0.zip" \
    "https://github.com/ryanoasis/nerd-fonts/releases/download/v3.4.0/GeistMono.zip"; then
    echo "Warning: Some fonts failed to install"
  fi
else
  echo "Warning: install-font-macos not found, skipping font installation"
fi

echo ""
echo "âœ… macOS setup complete!"
echo "You may need to restart your terminal or run 'exec fish' to use the new shell."
