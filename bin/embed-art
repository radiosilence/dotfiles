#!/bin/bash
set -eu
CORES=$(nproc)
# serialise for debugging
CORES=1
# If no arguments provided, use "." as the default
if [ $# -eq 0 ]; then
  set -- "."
fi

echo "[paths] $*"
echo "[cores] using $CORES cores"

# Check if ffmpeg is available
if ! command -v ffmpeg > /dev/null 2>&1; then
  echo "Error: ffmpeg is required but not installed."
  echo "Install with: brew install ffmpeg"
  exit 1
fi

# Function to embed art into a FLAC file
embed_art_to_flac() {
  flac_file="$1"
  dir="$(dirname "$flac_file")"

  # Look for common cover art filenames in the same directory
  cover_file=""
  for name in "cover.jpg" "folder.jpg" "album.jpg" "front.jpg" "cover.png" "folder.png" "album.png" "front.png"; do
    if [ -f "$dir/$name" ]; then
      cover_file="$dir/$name"
      break
    fi
  done

  if [ -z "$cover_file" ]; then
    echo "No cover art found for: $flac_file"
    return 1
  fi

  temp_file="${flac_file}.tmp"
  ffmpeg -i "$flac_file" -i "$cover_file" -map 0:a -map 1:v -c:a copy -c:v copy -disposition:v:0 attached_pic -f flac "$temp_file" -y

  if [ $? -eq 0 ]; then
    mv "$temp_file" "$flac_file"
    echo "Embedded art: $flac_file"
  else
    rm -f "$temp_file"
    echo "Failed to embed art: $flac_file"
  fi
}

export -f embed_art_to_flac

# Find all FLAC files and process them in parallel
find "$@" -type f -name "*.flac" -print0 \
  | parallel -0 -j "$CORES" embed_art_to_flac {}
