#!/usr/bin/env zsh

# Regenerate all Zsh completions
echo "Regenerating Zsh completions..."

# Remove existing completion dump
rm -f ~/.zcompdump*

# Force rebuild of completion system
autoload -Uz compinit
compinit -C

# Rebuild completions for common tools
echo "Rebuilding completions for installed tools..."

# Clean old completion directory
rm -rf ~/.config/zsh/completions

# Create completions directory
mkdir -p ~/.config/zsh/completions

# Standard "completion zsh" commands
standard_completion_commands=(
  "docker"
  "kubectl"
  "helm"
  "houston"
  "orbctl"
  "fcloud"
  "k9s"
  "argocd"
  "pulumi"
  "tilt"
  "turso"
  "lefthook"
  "mas"
  "yq"
  "rclone"
  "op"
  "nano-web"
)

for cmd in "${standard_completion_commands[@]}"; do
  if command -v "$cmd" > /dev/null; then
    echo "  → $cmd"
    "$cmd" completion zsh > ~/.config/zsh/completions/_"$cmd" 2> /dev/null || true
  fi
done

# Special cases with different syntax
if command -v gh > /dev/null; then
  echo "  → gh"
  gh completion -s zsh > ~/.config/zsh/completions/_gh 2> /dev/null || true
fi

if command -v task > /dev/null; then
  echo "  → task"
  task --completion zsh > ~/.config/zsh/completions/_task 2> /dev/null || true
fi

if command -v aws-vault > /dev/null; then
  echo "  → aws-vault"
  aws-vault --completion-script-zsh > ~/.config/zsh/completions/_aws-vault 2> /dev/null || true
fi

# Terraform (handled by terraform.zsh config file)
if command -v terraform > /dev/null; then
  echo "  → terraform (configured via terraform.zsh)"
fi

# Force rebuild of completion cache
echo "Rebuilding completion cache..."
rm -f ~/.zcompdump*

echo "Completion regeneration complete!"
echo "Restart your shell or run 'exec zsh' to load new completions."
