version: '3'

tasks:
  build:
    desc: Build the Swift application with TOML support
    silent: true
    cmds:
      - swift build -c release
      - cp .build/release/BrowserSchedule browser-schedule-swift
    sources:
      - main.swift
      - Package.swift
    generates:
      - browser-schedule-swift

  test:
    desc: Test the application with a URL
    deps: [build, setup-config]
    cmds:
      - ./browser-schedule-swift http://test.com
      - task: logs

  test-work:
    desc: Test during work hours (simulate by checking current time)
    deps: [build, setup-config]  
    cmds:
      - ./browser-schedule-swift http://test-work.com
      - task: logs

  install:
    desc: Install the app bundle as default browser
    deps: [build, setup-config]
    cmds:
      - task: create-app-bundle
      - /Applications/BrowserSchedule.app/Contents/MacOS/browser-schedule --set-default

  update:
    desc: Update the app bundle with current config
    deps: [build]
    cmds:
      - task: create-app-bundle

  setup-config:
    desc: Create config directory and default config
    internal: true
    silent: true
    cmds:
      - mkdir -p ~/.config/browser-schedule
      - |
        if [ ! -f ~/.config/browser-schedule/config.toml ]; then
          cat > ~/.config/browser-schedule/config.toml << 'EOF'
        [browsers]
        work = "Google Chrome"
        personal = "Zen"
        
        [urls]
        personal = ["reddit.com"]
        work = ["mycompany.atlassian.net"]
        
        [work_time]
        start = "9:00"
        end = "18:00"
        
        [work_days]
        start = "Mon"
        end = "Fri"
        
        # [log]
        # enabled = false
        EOF
        fi
      - |
        cat > ~/.config/browser-schedule/.gitignore << 'EOF'
        *.log
        config.local.toml
        EOF

  create-app-bundle:
    desc: Create macOS app bundle
    internal: true
    silent: true
    cmds:
      - mkdir -p /Applications/BrowserSchedule.app/Contents/MacOS
      - |
        cat > /Applications/BrowserSchedule.app/Contents/Info.plist << 'EOF'
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
        	<key>CFBundleExecutable</key>
        	<string>browser-schedule</string>
        	<key>CFBundleIdentifier</key>
        	<string>com.radiosilence.browser-schedule</string>
        	<key>CFBundleName</key>
        	<string>BrowserSchedule</string>
        	<key>CFBundleVersion</key>
        	<string>1.0</string>
        	<key>CFBundlePackageType</key>
        	<string>APPL</string>
        	<key>LSUIElement</key>
        	<true/>
        	<key>CFBundleURLTypes</key>
        	<array>
        		<dict>
        			<key>CFBundleURLName</key>
        			<string>Web site URL</string>
        			<key>CFBundleURLSchemes</key>
        			<array>
        				<string>http</string>
        				<string>https</string>
        			</array>
        			<key>LSHandlerRank</key>
        			<string>Owner</string>
        		</dict>
        	</array>
        </dict>
        </plist>
        EOF
      - cp browser-schedule-swift /Applications/BrowserSchedule.app/Contents/MacOS/browser-schedule
      - chmod +x /Applications/BrowserSchedule.app/Contents/MacOS/browser-schedule

  uninstall:
    desc: Remove the app bundle and reset default browser
    cmds:
      - |
        osascript -e 'tell application "System Preferences" to reveal anchor "defaultbrowser" of pane "com.apple.preference.general"'
        echo "Please manually set default browser in System Preferences (opened for you)"
      - rm -rf /Applications/BrowserSchedule.app

  status:
    desc: Show current status  
    cmds:
      - |
        if [ -d "/Applications/BrowserSchedule.app" ]; then
          echo "Status: Installed"
          # Check if registered as URL handler
          if /System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -dump | grep -q "com.example.browserschedule.*http"; then
            echo "  Default browser: ✓ Registered for HTTP URLs"
          else
            echo "  Default browser: ✗ Not registered as URL handler"
          fi
        else
          echo "Status: Not installed"
        fi

  clean:
    desc: Clean build artifacts and dependencies
    silent: true
    cmds:
      - rm -f browser-schedule-swift
      - swift package clean

  logs:
    desc: Show recent logs from unified logging
    silent: true
    cmds:
      - log show --predicate 'subsystem == "com.radiosilence.browser-schedule"' --last 30m --style compact

  config:
    desc: Show current config
    deps: [build]
    silent: true
    cmds:
      - ./browser-schedule-swift --config